üîπ Correct Step-by-Step Script
-- 1Ô∏è‚É£ Create server audit
USE master;
GO

CREATE SERVER AUDIT Audit_TacoDB1
TO FILE (FILEPATH = 'C:\SQLAudit\')  -- Ensure folder exists and SQL service has write permission
WITH (ON_FAILURE = CONTINUE);
GO

ALTER SERVER AUDIT Audit_TacoDB1
WITH (STATE = ON);
GO

-- 2Ô∏è‚É£ Create database audit specification
USE taco_treceability;
GO

CREATE DATABASE AUDIT SPECIFICATION Audit_AllTables
FOR SERVER AUDIT Audit_TacoDB1
ADD (INSERT ON DATABASE::taco_treceability BY [public]),
ADD (UPDATE ON DATABASE::taco_treceability BY [public]),
ADD (DELETE ON DATABASE::taco_treceability BY [public])
WITH (STATE = ON);
GO


‚úÖ Key points:

Don‚Äôt put comments inside the parentheses of CREATE SERVER AUDIT or CREATE DATABASE AUDIT SPECIFICATION. SQL Server sometimes misinterprets it.

Make sure each statement ends with GO so SQL Server treats them as separate batches.

üîπ After Running

Check that audit is enabled:

SELECT name, audit_guid, is_state_enabled
FROM sys.server_audits;

SELECT name, audit_guid, is_state_enabled
FROM sys.database_audit_specifications;


Test a DELETE to generate an audit entry:

DELETE TOP (1) FROM taco_treceability.production_count;


Read the audit log: to see the records

SELECT *
FROM sys.fn_get_audit_file('C:\SQLAudit\*.sqlaudit', DEFAULT, DEFAULT)
WHERE database_name = 'taco_treceability';


If you want, I can give a ready-to-run ‚Äúall-in-one‚Äù script that:

Creates audit folder if missing

Enables server audit + database audit on the entire database

Runs a test DELETE

Reads the audit log

///////////////////
OFF audit
ALTER SERVER AUDIT Audit_TacoDB1 WITH (STATE = OFF);

//////////
set size
CREATE SERVER AUDIT Audit_TacoDB1
TO FILE ( FILEPATH = 'C:\SQLAudit\', MAXSIZE = 100 MB, ROLLOVER_ON_FILE = ON );

/////////
ALter 

USE taco_treceability;
GO

-- First disable before dropping
ALTER DATABASE AUDIT SPECIFICATION Audit_AllTables1
WITH (STATE = OFF);
GO

-- Drop existing spec
DROP DATABASE AUDIT SPECIFICATION Audit_AllTables1;
GO

-- Recreate with proper groups
CREATE DATABASE AUDIT SPECIFICATION Audit_AllTables1
FOR SERVER AUDIT Audit_TacoDB1
    ADD (DATABASE_OBJECT_CHANGE_GROUP),   -- Captures ALTER / CREATE / DROP inside the DB
    ADD (UPDATE ON DATABASE::taco_treceability BY [public]),
    ADD (DELETE ON DATABASE::taco_treceability BY [public])
WITH (STATE = ON);
GO


//////////////Delete SERVER AUDIT
USE master;
GO

-- Disable the server audit first
ALTER SERVER AUDIT Audit_TacoDB1
WITH (STATE = OFF);
GO

-- Drop the server audit
DROP SERVER AUDIT Audit_TacoDB1;
GO

///////Delete SPECIFICATION
USE taco_treceability;
GO

-- Disable the Database Audit Specification first
ALTER DATABASE AUDIT SPECIFICATION Audit_AllTables1
WITH (STATE = OFF);
GO

-- Drop the Database Audit Specification
DROP DATABASE AUDIT SPECIFICATION Audit_AllTables1;
GO

