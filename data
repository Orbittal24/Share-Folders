const sql = require("mssql");

const config = {
  user: "your_username",
  password: "your_password",
  server: "your_server",
  database: "your_database",
  options: {
    encrypt: false,
    trustServerCertificate: true,
  },
};

async function updateModuleBarcodes() {
  var New_final_qr_code = "DJ2038-G2K0000036";

  try {
    let pool = await sql.connect(config);

    // 1. Fetch from table 1
    let result1 = await pool.request()
      .input("final_qrcode", sql.VarChar, New_final_qr_code)
      .query(`
        SELECT DISTINCT module_barcode_string
        FROM taco_treceability.battery_details
        WHERE final_qrcode = @final_qrcode
          AND module_barcode_string LIKE 'BA%'
          AND module_name = 'Smoke Sensor'
      `);

    let table1 = result1.recordset.map(r => r.module_barcode_string);

    // 2. Fetch from table 2
    let result2 = await pool.request()
      .query(`
        SELECT DISTINCT module_barcode
        FROM taco_treceability.torque_details_EIP_kr_tray
      `);

    let table2 = result2.recordset.map(r => r.module_barcode);

    console.log("Table 1:", table1);
    console.log("Table 2:", table2);

    if (table1.length !== table2.length) {
      throw new Error(`Array length mismatch: Table1=${table1.length}, Table2=${table2.length}`);
    }

    // 3. Perform updates index-wise
    for (let i = 0; i < table1.length; i++) {
      let oldValue = table2[i];
      let newValue = table1[i];

      console.log(`Updating row: ${oldValue} -> ${newValue}`);

      await pool.request()
        .input("newValue", sql.VarChar, newValue)
        .input("oldValue", sql.VarChar, oldValue)
        .query(`
          UPDATE taco_treceability.torque_details_EIP_kr_tray
          SET module_barcode = @newValue
          WHERE module_barcode = @oldValue
        `);
    }

    console.log("All updates completed successfully.");
    sql.close();
  } catch (err) {
    console.error("Error:", err);
    sql.close();
  }
}

updateModuleBarcodes();
