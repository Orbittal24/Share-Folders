// --------------------------------------------------------------------
// Step 3: Update smoke sensors (module_barcode, smoke_sensor_linked_pack_no, pack_no)
function updateSmokeSensors() {
    console.log("Starting smoke sensor updates...");

    // Build queries dynamically for smoke sensors
    const smokePairs = [
        { newVal: new_smoke1, oldVal: old_smoke1 },
        { newVal: new_smoke2, oldVal: old_smoke2 },
        { newVal: new_smoke3, oldVal: old_smoke3 },
        { newVal: new_smoke4, oldVal: old_smoke4 },
        { newVal: new_smoke5, oldVal: old_smoke5 },
        { newVal: new_smoke6, oldVal: old_smoke6 }
    ];

    function runUpdate(index) {
        if (index >= smokePairs.length) {
            console.log("✅ All smoke sensors updated successfully.");
            return;
        }

        const { newVal, oldVal } = smokePairs[index];

        // Skip dummy values (like '1')
        if (newVal === '1' || oldVal === '1') {
            console.log(`Skipping smoke sensor ${index + 1} (dummy value).`);
            runUpdate(index + 1);
            return;
        }

        const processqueryimport = `
            UPDATE taco_treceability.torque_details_EIP_traial2 
            SET 
                module_barcode = '${newVal}', 
                smoke_sensor_linked_pack_no = '${newVal}',
                pack_no = '${New_final_qr_code}'
            WHERE smoke_sensor_linked_pack_no = '${oldVal}'
        `;

        console.log(`Running update for smoke sensor ${index + 1}:`, processqueryimport);

        var request = new sql.Request(dbConn);
        request.query(processqueryimport, function (err, recordset) {
            if (err) {
                console.log(`❌ Error updating smoke sensor ${index + 1}:`, err);
            } else {
                console.log(`✅ Smoke sensor ${index + 1} updated successfully.`);
            }

            // Move to next smoke sensor after small delay
            setTimeout(() => {
                runUpdate(index + 1);
            }, 500);
        });
    }

    // Start sequential update
    runUpdate(0);
}
